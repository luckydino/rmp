import{b as u}from"./react-D-_si4LB.js";import{n as b}from"./index-DDaGTErg.js";const S=typeof window<"u"?u.useInsertionEffect||u.useLayoutEffect:()=>{};function I(t){const o=u.useRef(W);S(()=>{o.current=t},[t]);const r=u.useRef(null);return r.current||(r.current=function(){return o.current.apply(this,arguments)}),r.current}function W(){throw new Error("INVALID_USEEVENT_INVOCATION: the callback from useEvent cannot be invoked before the component has mounted.")}const k=(t,o)=>{const r={},l={};let[f,a]=[0,0],d=0;o.forEach(c=>{if(t.hasNode(c)){const s=c,i=t.getNodeAttributes(s);r[s]=i,f+=i.x,a+=i.y,d++}else if(t.hasEdge(c)){const s=c,[i,h]=t.extremities(s);l[s]={attr:t.getEdgeAttributes(s),source:i,target:h}}});const E={app:"rmp",version:1,nodesWithAttrs:r,edgesWithAttrs:l,avgX:f/d,avgY:a/d};return JSON.stringify(E)},x=(t,o,r,l,f,a)=>{const{nodesWithAttrs:d,edgesWithAttrs:E,version:c}=JSON.parse(t);if(c!==1)throw Error("Unrecognized version: ".concat(c));const s={};Object.keys(d).filter(e=>o.hasNode(e)).forEach(e=>{const n=b(10);if(e.startsWith("stn_"))s[e]="stn_".concat(n);else if(e.startsWith("misc_node_"))s[e]="misc_node_".concat(n);else throw Error("Unrecognized node id: ".concat(e))}),Object.keys(E).filter(e=>o.hasEdge(e)).forEach(e=>s[e]="line_".concat(b(10)));const i=Object.entries(s).reduce((e,[n,g])=>e.replaceAll(n,g),t),{nodesWithAttrs:h,edgesWithAttrs:A,avgX:v,avgY:O}=JSON.parse(i),m=h,N=A,[y,_]=[f-v,a-O];return Object.entries(m).forEach(([e,n])=>{n.x+=y,n.y+=_,o.addNode(e,n)}),Object.entries(N).forEach(([e,{attr:n,source:g,target:p}])=>o.addDirectedEdgeWithKey(e,g,p,n)),{nodes:new Set(Object.keys(m)),edges:new Set(Object.keys(N))}};export{k as e,x as i,I as u};
